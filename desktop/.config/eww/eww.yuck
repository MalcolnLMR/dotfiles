(
  defwindow exemple
  :monitor "DP-2" ; "HDMI-A-1" ; Pass this to DP-2 when finish developing
  :geometry (
              geometry 
              :x "0%"
              :y "20px"
              :width "25%"
              :height "100px"
              :anchor "top right"
            )
  :stacking "fg"
  :namespace "eww"
  (
    sound-output
  )
)


; Pulseaudio output widget
(
    defwidget sound-output [] ( ; START OF MAIN
      box 
      :orientation "vertical"
      :geometry (
                geometry
                :x "0%"
                :y "20px"
                :width "90%"
                :height "20px"
                )
      ( ; START OF OUTPUT
      box
      :orientation "horizontal"
      :geometry (
                  geometry
                  :x "0%"
                  :y "20px"
                  :width "90%"
                  :height "30px"
                )
      (
        button :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ ${audio-mute-num}; eww update audio-mute=; eww update audio-mute-num=0"
        audio-mute
      )
    ) ; END OF OUTPUT
 
    ( ; START OF OUTPUT
      image
        :path 'file:///tmp/.org.chromium.Chromium.P86DBH'
        :image-width 100
        :image-height 100
    ) ; END OF OUTPUT
 

    ( ; START OF INPUT
      box 
      :orientation "horizontal"
      :geometry (
                  geometry
                  :x "0%"
                  :y "20px"
                  :width "90%"
                  :height "30px"
                )
      (
        button :onclick "playerctl play-pause"
        time
      )
    ) ; END OF INPUT
  ); EOF defwidget
)

(defpoll time :interval "1s"
              :initial "offline"  ; optional, defaults to poll at startup
              :run-while music-visible   ; optional, defaults to 'true'
  `playerctl metadata | grep -oP 'title\\s+\\K.+'`)

(defvar audio-mute "")
(defvar audio-mute-num "1")
(defvar music-visible false)
